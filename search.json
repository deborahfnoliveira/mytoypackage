[{"path":"https://deborahfnoliveira.github.io/mytoypackage/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 mytoypackage authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://deborahfnoliveira.github.io/mytoypackage/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Deborah Oliveira. Author, maintainer.","code":""},{"path":"https://deborahfnoliveira.github.io/mytoypackage/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Oliveira D (2023). mytoypackage: Make Regular Expressions Exciting. https://github.com/deborahfnoliveira/mytoypackage, https://deborahfnoliveira.github.io/mytoypackage/.","code":"@Manual{,   title = {mytoypackage: Make Regular Expressions More Exciting},   author = {Deborah Oliveira},   year = {2023},   note = {https://github.com/deborahfnoliveira/mytoypackage, https://deborahfnoliveira.github.io/mytoypackage/}, }"},{"path":"https://deborahfnoliveira.github.io/mytoypackage/index.html","id":"mytoypackage","dir":"","previous_headings":"","what":"Make Regular Expressions More Exciting","title":"Make Regular Expressions More Exciting","text":"goal mytoypackage make easier split character vector.","code":""},{"path":"https://deborahfnoliveira.github.io/mytoypackage/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make Regular Expressions More Exciting","text":"can install development version mytoypackage GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"deborahfnoliveira/mytoypackage\")"},{"path":"https://deborahfnoliveira.github.io/mytoypackage/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Make Regular Expressions More Exciting","text":"basic example shows solve common problem:","code":"library(mytoypackage) x <- \"alfa,bravo,charlie,delta\" str_split_one(x, pattern = \",\") #> [1] \"alfa\"    \"bravo\"   \"charlie\" \"delta\""},{"path":"https://deborahfnoliveira.github.io/mytoypackage/reference/str_split_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a string — str_split_one","title":"Split a string — str_split_one","text":"Split string","code":""},{"path":"https://deborahfnoliveira.github.io/mytoypackage/reference/str_split_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a string — str_split_one","text":"","code":"str_split_one(string, pattern, n = Inf)"},{"path":"https://deborahfnoliveira.github.io/mytoypackage/reference/str_split_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a string — str_split_one","text":"string character vector one element. pattern split . n Maximum number pieces return.","code":""},{"path":"https://deborahfnoliveira.github.io/mytoypackage/reference/str_split_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a string — str_split_one","text":"character vector.","code":""},{"path":"https://deborahfnoliveira.github.io/mytoypackage/reference/str_split_one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a string — str_split_one","text":"","code":"x <- \"alfa,bravo,charlie,delta\" str_split_one(x, pattern = \",\") #> [1] \"alfa\"    \"bravo\"   \"charlie\" \"delta\""}]
